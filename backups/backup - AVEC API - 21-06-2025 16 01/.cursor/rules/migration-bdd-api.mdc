---
description: 
globs: 
alwaysApply: false
---
name: Migration accès BDD direct vers API
description: >
  Toutes les pages du projet doivent désormais communiquer avec la base de données uniquement via des routes API internes (PHP), et non plus via des requêtes SQL directes dans le code PHP des pages. Cette règle s’applique à toutes les pages côté administration, client, livreur, commerçant, etc.

actions:
  - Pour chaque page PHP qui interagit avec la base de données :
      - Supprimer tout accès direct à la base de données (suppression des includes de fichiers de connexion, suppression des appels à getConnexion(), $conn->query(), etc.).
      - Créer ou utiliser une route API RESTful dédiée (dans /api/[ressource]/[methode].php) pour chaque opération CRUD (lecture, ajout, modification, suppression), en respectant la structure :
          - Un dossier par ressource (ex : /api/admin/stats/)
          - Un fichier par méthode HTTP (ex : get.php, post.php, put.php, delete.php)
      - Utiliser le fichier .htaccess pour router les URLs propres (ex : /api/admin/stats/) vers le bon fichier méthode (ex : /api/admin/stats/get.php).
      - Remplacer la logique PHP par des appels à l’API via JavaScript (fetch) côté client, ou via des requêtes HTTP côté serveur si nécessaire.
      - Adapter le rendu HTML pour afficher les données reçues de l’API (en JSON) via du JavaScript dynamique.
      - S’assurer que toutes les modifications, ajouts ou suppressions de données passent par l’API.
      - Documenter chaque nouvelle route API créée (endpoint, paramètres, réponse attendue).

acceptance_criteria:
  - Aucune page ne doit contenir de requête SQL directe ou d’appel à la fonction de connexion à la BDD.
  - Toutes les données affichées ou modifiées dans l’interface doivent provenir d’un appel à l’API.
  - Les routes API doivent être sécurisées, retourner des réponses JSON claires, et être organisées par ressource et méthode.
  - Le code JavaScript doit gérer les erreurs de l’API et afficher des messages appropriés à l’utilisateur.
  - La documentation des endpoints API doit être à jour.
  - Le .htaccess doit router les URLs RESTful vers les bons fichiers API (voir exemple ci-dessous).

examples:
  - Avant : $conn = getConnexion(); $stmt = $conn->query("SELECT * FROM utilisateurs");
  - Après : fetch('/api/utilisateurs/get.php').then(r => r.json()).then(data => { ... });
  - .htaccess :
      RewriteEngine On
      RewriteRule ^api/([a-zA-Z0-9_]+)/([a-zA-Z0-9_]+)/([a-zA-Z0-9_]+)\.php$ api/$1/$2/$3.php [L]


      RewriteRule ^api/([a-zA-Z0-9_]+)/([a-zA-Z0-9_]+)/?$ api/$1/$2/get.php [L]